#!/usr/bin/env python
# -*- coding:utf-8 -*-
# Created by winchoo
# 2018/5/27

###############################元祖的定义格式
# li = [11,22,33]
# tu = (11,22,33)
# print(type(tu))
# print(type(li))
#注意：元祖的元素不可被修改，不能被增加或者删除
#建议：一般写元祖的时候给后面加一个逗号，和方法以做区分，一眼就能看出自己的写的这个是元祖

###############################通过索引取值
# tu = (11,22,33,)
# v = tu[1]
# print(v)

###############################通过切片取值
# tu = (11,22,33,)
# v = tu[0:2]
# print(v)

###############################进行for循环，是可迭代对象，字符串及列表也是可迭代对象
# tu = (11,22,33,)
# for item in tu:
#     print(item)

###############################将字符串转换为元祖
# s = "sfdsfa"
# v = tuple(s)
# print(v)

###############################将列表转换为元祖
# li = ["fdsaf",22,True]
# v = tuple(li)
# print(v)

###############################将元祖转换为列表
# tu = (11,22,33)
# v = list(tu)
# print(v)

###############################将元祖转换为字符串相连，前提是元祖里面的元素全部是字符串类型。
# tu = ("fdsaf","toys","apple")
# v ="_".join(tu)
# print(v)

###############################列表后也可以迭代元祖
# li = ["dfdsaf","fdwww"]
# li.extend((11,22,33,))
# print(li)

###############################注意：元祖是有序的，
# tu = (111,"winchoo",(11,22),[(33,44)],True,33,44)
# v = tu[3][0][0]
# print(v)

###############################元祖的一级元素不可被修改/删除/增加，列表的元素可以被修改
# tu = (111,"winchoo",(11,22),[(33,44)],True,33,44)
# tu[3][0] = 567
# print(tu)

