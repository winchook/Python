    5. 登录，注册
        - 密码：数字，字母，特殊字符
        - 密码两次输入一致

        提交：
            v = MyForm(request.GET) # 6个字段
            if v.is_valid():
                pass

        密码示例：RegexField自定义密码验证规则

            password = forms.RegexField(
                '^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$\%\^\&\*\(\)])[0-9a-zA-Z!@#$\%\^\&\*\(\)]{8,32}$',
                min_length=12,
                max_length=32,
                error_messages={'required': '密码不能为空.',
                                'invalid': '密码必须包含数字，字母、特殊字符',
                                'min_length': "密码长度不能小于8个字符",
                                'max_length': "密码长度不能大于32个字符"}
            )



            class RegisterForm(BaseForm, django_forms.Form):
                username = django_fields.CharField()
                password = django_fields.CharField()
                confirm_pwd = django_fields.CharField()

                def clean(self):
                    v1 = self.cleaned_data['password']
                    v2 = self.cleaned_data['confirm_pwd']
                    if v1 == v2:
                        pass
                    else:
                        from django.core.exceptions import ValidationError
                        raise ValidationError('密码输入不一致')


            def register(request):
                v = RegisterForm(request.POST)
                if v.is_valid():
                    pass
                else:
                    v.errors['username']
                    v.errors['__all__']
                    v.errors[NON_FIELD_ERRORS]
                    {
                        __all__: [],
                        username: [],
                        password: []
                        confirm_pwd: []
                    }

                return render(request, 'register.html', {'v':v})


            register.html

                {{v.errors.username.0}}

                {{v.non_field_errors}}


        补充： 验证码

            1.点击更换验证码
            2.验证码到底是否有必要是图片？有
            3.
                服务端：
                    a. session中保存随机验证码，如：87fs
                    b. 在页面中显示图片
                客户端：
                    a. 显示图片
                    b. 在cookie中保存sessionid


                验证码图片
                验证码字符串:87fs
                sessionid='asdfasdfasdfasdfasdfasdf09'
                {
                    "asdfasdfasdfasdfasdfasdf09": {'ck': 87fs}
                    "ffsdfsdfsdfsdfsqq243234234": {'ck': 98fd}
                    "ffsdfsdfsdfsdfsqq243234234": {'ck': 98fd}
                    "ffsdfsdfsdfsdfsqq243234234": {'ck': 98fd}
                    "ffsdfsdfsdfsdfsqq243234234": {'ck': 98fd}
                    "ffsdfsdfsdfsdfsqq243234234": {'ck': 98fd}
                    "ffsdfsdfsdfsdfsqq243234234": {'ck': 98fd}
                    "ffsdfsdfsdfsdfsqq243234234": {'ck': 98fd}
                }


                ffsdfsdfsdfsdfsqq243234234 : 9999

                使用：
                    check_code.py
                    Monaco.ttf

                    <img src="/shizhengwen.html" onclick="changeImg(this);">

                    <script>
                        function changeImg(ths) {
                            ths.src = ths.src + "?";
                        }
                    </script>



                    def xiaoyun(request):
                        if request.method == "GET":
                            return render(request,'xiaoyun.html')
                        else:
                            input_code = request.POST.get('code')
                            check_cd = request.session['check_code']
                            print(input_code,check_cd)
                            return HttpResponse('...')

                    def shizhengwen(request):
                        """生成验证码图片"""
                        # f = open('static/imgs/avatar/20130809170025.png','rb')
                        # data = f.read()
                        # f.close()
                        f = BytesIO()
                        img, code = create_validate_code()
                        request.session['check_code'] = code
                        img.save(f, 'PNG')
                        # request.session['CheckCode'] = code
                        return HttpResponse(f.getvalue())


        补充： 一个月免登陆
            request.session.set_expiry(60 * 60 * 24 * 30)
            SESSION_COOKIE_AGE = 1209600



    6. 个人博客

            个人主页：http://127.0.0.1:8000/wupeiqi.html
            文章最终：http://127.0.0.1:8000/wupeiqi/5.html
            个人筛选：
                      http://127.0.0.1:8000/wupeiqi/tag/2.html
                      http://127.0.0.1:8000/wupeiqi/category/3.html
                      http://127.0.0.1:8000/wupeiqi/date/2017-02.html

            注意：个人主题定制